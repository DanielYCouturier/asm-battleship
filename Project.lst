Microsoft (R) Macro Assembler Version 14.00.24210.0	    04/22/24 20:53:55
z_main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				GameMain PROTO
				PrintString PROTO
				SetCursor PROTO
				printStr MACRO string, pos
				mov eax, pos
				lea ebx, string
				mov ecx, LENGTHOF string
				call PrintString
				ENDM

				; source https://ascii.co.uk/art/battleship
				; (im not that talented)

 00000000			.data 
 00000000 38 38 38 38 50	T1 BYTE "8888PYba,                              88                      88          88  8b,dPPYba, " 
	   59 62 61 2C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 38
	   38 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 38 38
	   20 20 20 20 20
	   20 20 20 20 20
	   38 38 20 20 38
	   62 2C 64 50 50
	   59 62 61 2C 20
 0000005A 38 38 20 20 20	T2 BYTE "88     '8a               ,d      ,d    88                      88          ''  88P'    '8a" 
	   20 20 27 38 61
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2C 64 20 20 20
	   20 20 20 2C 64
	   20 20 20 20 38
	   38 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 38 38
	   20 20 20 20 20
	   20 20 20 20 20
	   27 27 20 20 38
	   38 50 27 20 20
	   20 20 27 38 61
 000000B4 38 38 20 20 20	T3 BYTE "88      d8               88      88    88                      88              88       d8"
	   20 20 20 64 38
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   38 38 20 20 20
	   20 20 20 38 38
	   20 20 20 20 38
	   38 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 38 38
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 38
	   38 20 20 20 20
	   20 20 20 64 38
 0000010E 38 38 38 64 50	T4 BYTE "888dPPYbP   ,adPPYYba, MM88MMM MM88MMM 88  ,adPPYba, ,adPPYba, 88,dPPYba,  88  88b,   ,a8'"
	   50 59 62 50 20
	   20 20 2C 61 64
	   50 50 59 59 62
	   61 2C 20 4D 4D
	   38 38 4D 4D 4D
	   20 4D 4D 38 38
	   4D 4D 4D 20 38
	   38 20 20 2C 61
	   64 50 50 59 62
	   61 2C 20 2C 61
	   64 50 50 59 62
	   61 2C 20 38 38
	   2C 64 50 50 59
	   62 61 2C 20 20
	   38 38 20 20 38
	   38 62 2C 20 20
	   20 2C 61 38 27
 00000168 38 38 20 20 20	T5 BYTE "88      '8a ''     'Y8   88      88    88 a8P_____88 I8[    '' 88P'    '8a 88  88'YbbdP'' "
	   20 20 20 27 38
	   61 20 27 27 20
	   20 20 20 20 27
	   59 38 20 20 20
	   38 38 20 20 20
	   20 20 20 38 38
	   20 20 20 20 38
	   38 20 61 38 50
	   5F 5F 5F 5F 5F
	   38 38 20 49 38
	   5B 20 20 20 20
	   27 27 20 38 38
	   50 27 20 20 20
	   20 27 38 61 20
	   38 38 20 20 38
	   38 27 59 62 62
	   64 50 27 27 20
 000001C2 38 38 20 20 20	T6 BYTE "88       d8 ,adPPPPP88   88      88    88 8PP'''''''  ''Y8ba,  88       88 88  88         "
	   20 20 20 20 64
	   38 20 2C 61 64
	   50 50 50 50 50
	   38 38 20 20 20
	   38 38 20 20 20
	   20 20 20 38 38
	   20 20 20 20 38
	   38 20 38 50 50
	   27 27 27 27 27
	   27 27 20 20 27
	   27 59 38 62 61
	   2C 20 20 38 38
	   20 20 20 20 20
	   20 20 38 38 20
	   38 38 20 20 38
	   38 20 20 20 20
	   20 20 20 20 20
 0000021C 38 38 20 20 20	T7 BYTE "88     ,a8' 88,    ,88   88,     88,   88 '8b,   ,aa aa    ]8I 88       88 88  88         "
	   20 20 2C 61 38
	   27 20 38 38 2C
	   20 20 20 20 2C
	   38 38 20 20 20
	   38 38 2C 20 20
	   20 20 20 38 38
	   2C 20 20 20 38
	   38 20 27 38 62
	   2C 20 20 20 2C
	   61 61 20 61 61
	   20 20 20 20 5D
	   38 49 20 38 38
	   20 20 20 20 20
	   20 20 38 38 20
	   38 38 20 20 38
	   38 20 20 20 20
	   20 20 20 20 20
 00000276 38 59 27 59 62	T8 BYTE "8Y'Ybbd8''  ''8bbdP'Y8   'Y888   'Y888 88  ''Ybbd8'' ''YbbdP'' 88       88 88  88         "
	   62 64 38 27 27
	   20 20 27 27 38
	   62 62 64 50 27
	   59 38 20 20 20
	   27 59 38 38 38
	   20 20 20 27 59
	   38 38 38 20 38
	   38 20 20 27 27
	   59 62 62 64 38
	   27 27 20 27 27
	   59 62 62 64 50
	   27 27 20 38 38
	   20 20 20 20 20
	   20 20 38 38 20
	   38 38 20 20 38
	   38 20 20 20 20
	   20 20 20 20 20

 000002D0 20 20 20 20 20	S1 BYTE "                                     # #  ( )                        "
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 23 20 23
	   20 20 28 20 29
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20
 00000315 20 20 20 20 20	S2 BYTE "                                  ___#_#___|__                       "
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   5F 5F 23 5F 23
	   5F 5F 5F 7C 5F
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20
 0000035A 20 20 20 20 20	S3 BYTE "                              _  |____________|  _                   "
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5F 20 20 7C 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 7C 20 20 5F
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20
 0000039F 20 20 20 20 20	S4 BYTE "                       _=====| | |            | | |==== _            "
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 3D
	   3D 3D 3D 3D 7C
	   20 7C 20 7C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 7C 20 7C 20
	   7C 3D 3D 3D 3D
	   20 5F 20 20 20
	   20 20 20 20 20
	   20 20 20 20
 000003E4 20 20 20 20 20	S5 BYTE "                 =====| |.---------------------------. | |====       "
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 3D 3D 3D
	   3D 3D 7C 20 7C
	   2E 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2E 20
	   7C 20 7C 3D 3D
	   3D 3D 20 20 20
	   20 20 20 20
 00000429 20 20 20 3C 2D	S6 BYTE "   <--------------------'   .  .  .  .  .  .  .  .   '--------------/"
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 27
	   20 20 20 2E 20
	   20 2E 20 20 2E
	   20 20 2E 20 20
	   2E 20 20 2E 20
	   20 2E 20 20 2E
	   20 20 20 27 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2F
 0000046E 20 20 20 20 20	S7 BYTE "     \                                                             / "
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20
 000004B3 20 20 20 20 20	S8 BYTE "      \___________________________________________________________/  "
	   20 5C 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 2F 20 20
 000004F8 45 6E 74 65 72	message BYTE "Enter a Difficulty 1-100: "
	   20 61 20 44 69
	   66 66 69 63 75
	   6C 74 79 20 31
	   2D 31 30 30 3A
	   20
 00000512 49 4E 56 41 4C	errormsg BYTE "INVALID VALUE, TRY AGAIN"
	   49 44 20 56 41
	   4C 55 45 2C 20
	   54 52 59 20 41
	   47 41 49 4E
 0000052A  00000078 [		erase BYTE 120 DUP (" ")
	    20
	   ]

 00000000			.code
 00000000			EraseScreen PROC
				printStr erase, 00000000h
 00000000  B8 00000000	     1	mov eax, 00000000h
 00000005  8D 1D 0000052A R  1	lea ebx, erase
 0000000B  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000010  E8 00000000 E     1	call PrintString
				printStr erase, 00010000h
 00000015  B8 00010000	     1	mov eax, 00010000h
 0000001A  8D 1D 0000052A R  1	lea ebx, erase
 00000020  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000025  E8 00000000 E     1	call PrintString
				printStr erase, 00020000h
 0000002A  B8 00020000	     1	mov eax, 00020000h
 0000002F  8D 1D 0000052A R  1	lea ebx, erase
 00000035  B9 00000078	     1	mov ecx, LENGTHOF erase
 0000003A  E8 00000000 E     1	call PrintString
				printStr erase, 00030000h
 0000003F  B8 00030000	     1	mov eax, 00030000h
 00000044  8D 1D 0000052A R  1	lea ebx, erase
 0000004A  B9 00000078	     1	mov ecx, LENGTHOF erase
 0000004F  E8 00000000 E     1	call PrintString
				printStr erase, 00040000h
 00000054  B8 00040000	     1	mov eax, 00040000h
 00000059  8D 1D 0000052A R  1	lea ebx, erase
 0000005F  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000064  E8 00000000 E     1	call PrintString
				printStr erase, 00050000h
 00000069  B8 00050000	     1	mov eax, 00050000h
 0000006E  8D 1D 0000052A R  1	lea ebx, erase
 00000074  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000079  E8 00000000 E     1	call PrintString
				printStr erase, 00060000h
 0000007E  B8 00060000	     1	mov eax, 00060000h
 00000083  8D 1D 0000052A R  1	lea ebx, erase
 00000089  B9 00000078	     1	mov ecx, LENGTHOF erase
 0000008E  E8 00000000 E     1	call PrintString
				printStr erase, 00070000h
 00000093  B8 00070000	     1	mov eax, 00070000h
 00000098  8D 1D 0000052A R  1	lea ebx, erase
 0000009E  B9 00000078	     1	mov ecx, LENGTHOF erase
 000000A3  E8 00000000 E     1	call PrintString
				printStr erase, 00080000h
 000000A8  B8 00080000	     1	mov eax, 00080000h
 000000AD  8D 1D 0000052A R  1	lea ebx, erase
 000000B3  B9 00000078	     1	mov ecx, LENGTHOF erase
 000000B8  E8 00000000 E     1	call PrintString
				printStr erase, 00090000h
 000000BD  B8 00090000	     1	mov eax, 00090000h
 000000C2  8D 1D 0000052A R  1	lea ebx, erase
 000000C8  B9 00000078	     1	mov ecx, LENGTHOF erase
 000000CD  E8 00000000 E     1	call PrintString
				printStr erase, 000a0000h
 000000D2  B8 000A0000	     1	mov eax, 000a0000h
 000000D7  8D 1D 0000052A R  1	lea ebx, erase
 000000DD  B9 00000078	     1	mov ecx, LENGTHOF erase
 000000E2  E8 00000000 E     1	call PrintString
				printStr erase, 000b0000h
 000000E7  B8 000B0000	     1	mov eax, 000b0000h
 000000EC  8D 1D 0000052A R  1	lea ebx, erase
 000000F2  B9 00000078	     1	mov ecx, LENGTHOF erase
 000000F7  E8 00000000 E     1	call PrintString
				printStr erase, 000c0000h
 000000FC  B8 000C0000	     1	mov eax, 000c0000h
 00000101  8D 1D 0000052A R  1	lea ebx, erase
 00000107  B9 00000078	     1	mov ecx, LENGTHOF erase
 0000010C  E8 00000000 E     1	call PrintString
				printStr erase, 000d0000h
 00000111  B8 000D0000	     1	mov eax, 000d0000h
 00000116  8D 1D 0000052A R  1	lea ebx, erase
 0000011C  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000121  E8 00000000 E     1	call PrintString
				printStr erase, 000e0000h
 00000126  B8 000E0000	     1	mov eax, 000e0000h
 0000012B  8D 1D 0000052A R  1	lea ebx, erase
 00000131  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000136  E8 00000000 E     1	call PrintString
				printStr erase, 000f0000h
 0000013B  B8 000F0000	     1	mov eax, 000f0000h
 00000140  8D 1D 0000052A R  1	lea ebx, erase
 00000146  B9 00000078	     1	mov ecx, LENGTHOF erase
 0000014B  E8 00000000 E     1	call PrintString
				printStr erase, 00100000h
 00000150  B8 00100000	     1	mov eax, 00100000h
 00000155  8D 1D 0000052A R  1	lea ebx, erase
 0000015B  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000160  E8 00000000 E     1	call PrintString
				printStr erase, 00110000h
 00000165  B8 00110000	     1	mov eax, 00110000h
 0000016A  8D 1D 0000052A R  1	lea ebx, erase
 00000170  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000175  E8 00000000 E     1	call PrintString
				printStr erase, 00120000h
 0000017A  B8 00120000	     1	mov eax, 00120000h
 0000017F  8D 1D 0000052A R  1	lea ebx, erase
 00000185  B9 00000078	     1	mov ecx, LENGTHOF erase
 0000018A  E8 00000000 E     1	call PrintString
				printStr erase, 00130000h
 0000018F  B8 00130000	     1	mov eax, 00130000h
 00000194  8D 1D 0000052A R  1	lea ebx, erase
 0000019A  B9 00000078	     1	mov ecx, LENGTHOF erase
 0000019F  E8 00000000 E     1	call PrintString
				printStr erase, 00140000h
 000001A4  B8 00140000	     1	mov eax, 00140000h
 000001A9  8D 1D 0000052A R  1	lea ebx, erase
 000001AF  B9 00000078	     1	mov ecx, LENGTHOF erase
 000001B4  E8 00000000 E     1	call PrintString
				printStr erase, 00150000h
 000001B9  B8 00150000	     1	mov eax, 00150000h
 000001BE  8D 1D 0000052A R  1	lea ebx, erase
 000001C4  B9 00000078	     1	mov ecx, LENGTHOF erase
 000001C9  E8 00000000 E     1	call PrintString
				printStr erase, 00160000h
 000001CE  B8 00160000	     1	mov eax, 00160000h
 000001D3  8D 1D 0000052A R  1	lea ebx, erase
 000001D9  B9 00000078	     1	mov ecx, LENGTHOF erase
 000001DE  E8 00000000 E     1	call PrintString
				printStr erase, 00170000h
 000001E3  B8 00170000	     1	mov eax, 00170000h
 000001E8  8D 1D 0000052A R  1	lea ebx, erase
 000001EE  B9 00000078	     1	mov ecx, LENGTHOF erase
 000001F3  E8 00000000 E     1	call PrintString
				printStr erase, 00180000h
 000001F8  B8 00180000	     1	mov eax, 00180000h
 000001FD  8D 1D 0000052A R  1	lea ebx, erase
 00000203  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000208  E8 00000000 E     1	call PrintString
				printStr erase, 00190000h
 0000020D  B8 00190000	     1	mov eax, 00190000h
 00000212  8D 1D 0000052A R  1	lea ebx, erase
 00000218  B9 00000078	     1	mov ecx, LENGTHOF erase
 0000021D  E8 00000000 E     1	call PrintString
				printStr erase, 001b002dh
 00000222  B8 001B002D	     1	mov eax, 001b002dh
 00000227  8D 1D 0000052A R  1	lea ebx, erase
 0000022D  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000232  E8 00000000 E     1	call PrintString
				printStr erase, 001c0000h
 00000237  B8 001C0000	     1	mov eax, 001c0000h
 0000023C  8D 1D 0000052A R  1	lea ebx, erase
 00000242  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000247  E8 00000000 E     1	call PrintString
				printStr erase, 001d0000h
 0000024C  B8 001D0000	     1	mov eax, 001d0000h
 00000251  8D 1D 0000052A R  1	lea ebx, erase
 00000257  B9 00000078	     1	mov ecx, LENGTHOF erase
 0000025C  E8 00000000 E     1	call PrintString
				printStr erase, 001e0000h
 00000261  B8 001E0000	     1	mov eax, 001e0000h
 00000266  8D 1D 0000052A R  1	lea ebx, erase
 0000026C  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000271  E8 00000000 E     1	call PrintString
 00000276  C3			ret
 00000277			EraseScreen ENDP
 00000277			main PROC
 00000277			L1:
 00000277  B8 00000004		mov  eax, red
 0000027C  E8 00000000 E	call SetTextColor
				printStr T1, 00020010h
 00000281  B8 00020010	     1	mov eax, 00020010h
 00000286  8D 1D 00000000 R  1	lea ebx, T1
 0000028C  B9 0000005A	     1	mov ecx, LENGTHOF T1
 00000291  E8 00000000 E     1	call PrintString
				printStr T2, 00030010h
 00000296  B8 00030010	     1	mov eax, 00030010h
 0000029B  8D 1D 0000005A R  1	lea ebx, T2
 000002A1  B9 0000005A	     1	mov ecx, LENGTHOF T2
 000002A6  E8 00000000 E     1	call PrintString
				printStr T3, 00040010h
 000002AB  B8 00040010	     1	mov eax, 00040010h
 000002B0  8D 1D 000000B4 R  1	lea ebx, T3
 000002B6  B9 0000005A	     1	mov ecx, LENGTHOF T3
 000002BB  E8 00000000 E     1	call PrintString
				printStr T4, 00050010h
 000002C0  B8 00050010	     1	mov eax, 00050010h
 000002C5  8D 1D 0000010E R  1	lea ebx, T4
 000002CB  B9 0000005A	     1	mov ecx, LENGTHOF T4
 000002D0  E8 00000000 E     1	call PrintString
				printStr T5, 00060010h
 000002D5  B8 00060010	     1	mov eax, 00060010h
 000002DA  8D 1D 00000168 R  1	lea ebx, T5
 000002E0  B9 0000005A	     1	mov ecx, LENGTHOF T5
 000002E5  E8 00000000 E     1	call PrintString
				printStr T6, 00070010h
 000002EA  B8 00070010	     1	mov eax, 00070010h
 000002EF  8D 1D 000001C2 R  1	lea ebx, T6
 000002F5  B9 0000005A	     1	mov ecx, LENGTHOF T6
 000002FA  E8 00000000 E     1	call PrintString
				printStr T7, 00080010h
 000002FF  B8 00080010	     1	mov eax, 00080010h
 00000304  8D 1D 0000021C R  1	lea ebx, T7
 0000030A  B9 0000005A	     1	mov ecx, LENGTHOF T7
 0000030F  E8 00000000 E     1	call PrintString
				printStr T8, 00090010h
 00000314  B8 00090010	     1	mov eax, 00090010h
 00000319  8D 1D 00000276 R  1	lea ebx, T8
 0000031F  B9 0000005A	     1	mov ecx, LENGTHOF T8
 00000324  E8 00000000 E     1	call PrintString
 00000329  B8 0000000F		mov  eax, white
 0000032E  E8 00000000 E	call SetTextColor
				printStr S1, 00120015h
 00000333  B8 00120015	     1	mov eax, 00120015h
 00000338  8D 1D 000002D0 R  1	lea ebx, S1
 0000033E  B9 00000045	     1	mov ecx, LENGTHOF S1
 00000343  E8 00000000 E     1	call PrintString
				printStr S2, 00130015h
 00000348  B8 00130015	     1	mov eax, 00130015h
 0000034D  8D 1D 00000315 R  1	lea ebx, S2
 00000353  B9 00000045	     1	mov ecx, LENGTHOF S2
 00000358  E8 00000000 E     1	call PrintString
				printStr S3, 00140015h
 0000035D  B8 00140015	     1	mov eax, 00140015h
 00000362  8D 1D 0000035A R  1	lea ebx, S3
 00000368  B9 00000045	     1	mov ecx, LENGTHOF S3
 0000036D  E8 00000000 E     1	call PrintString
				printStr S4, 00150015h
 00000372  B8 00150015	     1	mov eax, 00150015h
 00000377  8D 1D 0000039F R  1	lea ebx, S4
 0000037D  B9 00000045	     1	mov ecx, LENGTHOF S4
 00000382  E8 00000000 E     1	call PrintString
				printStr S5, 00160015h
 00000387  B8 00160015	     1	mov eax, 00160015h
 0000038C  8D 1D 000003E4 R  1	lea ebx, S5
 00000392  B9 00000045	     1	mov ecx, LENGTHOF S5
 00000397  E8 00000000 E     1	call PrintString
				printStr S6, 00170015h
 0000039C  B8 00170015	     1	mov eax, 00170015h
 000003A1  8D 1D 00000429 R  1	lea ebx, S6
 000003A7  B9 00000045	     1	mov ecx, LENGTHOF S6
 000003AC  E8 00000000 E     1	call PrintString
				printStr S7, 00180015h
 000003B1  B8 00180015	     1	mov eax, 00180015h
 000003B6  8D 1D 0000046E R  1	lea ebx, S7
 000003BC  B9 00000045	     1	mov ecx, LENGTHOF S7
 000003C1  E8 00000000 E     1	call PrintString
				printStr S8, 00190015h
 000003C6  B8 00190015	     1	mov eax, 00190015h
 000003CB  8D 1D 000004B3 R  1	lea ebx, S8
 000003D1  B9 00000045	     1	mov ecx, LENGTHOF S8
 000003D6  E8 00000000 E     1	call PrintString
 000003DB			L2:
				printStr erase, 001b0000h
 000003DB  B8 001B0000	     1	mov eax, 001b0000h
 000003E0  8D 1D 0000052A R  1	lea ebx, erase
 000003E6  B9 00000078	     1	mov ecx, LENGTHOF erase
 000003EB  E8 00000000 E     1	call PrintString
				printStr message, 001b002dh
 000003F0  B8 001B002D	     1	mov eax, 001b002dh
 000003F5  8D 1D 000004F8 R  1	lea ebx, message
 000003FB  B9 0000001A	     1	mov ecx, LENGTHOF message
 00000400  E8 00000000 E     1	call PrintString
 00000405  B8 001B0047		mov eax,001b0047h
 0000040A  E8 00000000 E	call SetCursor
 0000040F  E8 00000000 E	call ReadInt
				.IF eax <=100
 00000414  83 F8 64	   *	    cmp    eax, 064h
 00000417  77 08	   *	    ja	@C0001
				.IF eax >= 1
 00000419  83 F8 01	   *	    cmp    eax, 001h
 0000041C  72 03	   *	    jb	@C0003
 0000041E  50			push eax
 0000041F  EB 2C		jmp exit_L2
				.ENDIF
				.ENDIF
 00000421		   *@C0003:
 00000421		   *@C0001:
				printStr erase, 001c0000h
 00000421  B8 001C0000	     1	mov eax, 001c0000h
 00000426  8D 1D 0000052A R  1	lea ebx, erase
 0000042C  B9 00000078	     1	mov ecx, LENGTHOF erase
 00000431  E8 00000000 E     1	call PrintString
				printStr errormsg, 001c002dh
 00000436  B8 001C002D	     1	mov eax, 001c002dh
 0000043B  8D 1D 00000512 R  1	lea ebx, errormsg
 00000441  B9 00000018	     1	mov ecx, LENGTHOF errormsg
 00000446  E8 00000000 E     1	call PrintString
 0000044B  EB 8E		jmp L2
 0000044D			exit_L2:
 0000044D  E8 FFFFFBAE		call EraseScreen
 00000452  58			pop eax
 00000453  E8 00000000 E	call GameMain
 00000458  E8 FFFFFBA3		call EraseScreen
 0000045D  E9 FFFFFE15		jmp L1
				INVOKE ExitProcess, 0
 00000462  6A 00	   *	    push   +000000000h
 00000464  E8 00000000 E   *	    call   ExitProcess
 00000469			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.00.24210.0	    04/22/24 20:53:55
z_main.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

printStr . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000005A2 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000469 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EraseScreen  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000277 Public STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameMain . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PrintString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetCursor  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000277 _TEXT	Length= 000001F2 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000277 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000003DB _TEXT	
  exit_L2  . . . . . . . . . . .	L Near	 0000044D _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
S1 . . . . . . . . . . . . . . .	Byte	 000002D0 _DATA	
S2 . . . . . . . . . . . . . . .	Byte	 00000315 _DATA	
S3 . . . . . . . . . . . . . . .	Byte	 0000035A _DATA	
S4 . . . . . . . . . . . . . . .	Byte	 0000039F _DATA	
S5 . . . . . . . . . . . . . . .	Byte	 000003E4 _DATA	
S6 . . . . . . . . . . . . . . .	Byte	 00000429 _DATA	
S7 . . . . . . . . . . . . . . .	Byte	 0000046E _DATA	
S8 . . . . . . . . . . . . . . .	Byte	 000004B3 _DATA	
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
T1 . . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
T2 . . . . . . . . . . . . . . .	Byte	 0000005A _DATA	
T3 . . . . . . . . . . . . . . .	Byte	 000000B4 _DATA	
T4 . . . . . . . . . . . . . . .	Byte	 0000010E _DATA	
T5 . . . . . . . . . . . . . . .	Byte	 00000168 _DATA	
T6 . . . . . . . . . . . . . . .	Byte	 000001C2 _DATA	
T7 . . . . . . . . . . . . . . .	Byte	 0000021C _DATA	
T8 . . . . . . . . . . . . . . .	Byte	 00000276 _DATA	
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
erase  . . . . . . . . . . . . .	Byte	 0000052A _DATA	
errormsg . . . . . . . . . . . .	Byte	 00000512 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
message  . . . . . . . . . . . .	Byte	 000004F8 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
